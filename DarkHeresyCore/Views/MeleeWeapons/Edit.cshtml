@model DarkHeresy.ViewModels.MeleeWeaponViewModel

@{
    var title = (Model.Id == null) ? "New" : "Edit";
    ViewData["Title"] = @title;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>

<form asp-action="Edit">
    <div class="form-horizontal">
        <h4>MeleeWeapon</h4>
        <hr/>
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        @Html.HiddenFor(m => m.Id)
        <div class="form-group">
            @Html.LabelFor(m => m.Name, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Name, new { @class = "form-control"})
                @Html.ValidationMessageFor(m => m.Name)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.TwoHanded, new { @class="col-md-2 control-label"})
            <div class="col-md-10">
                @Html.CheckBoxFor(m => m.TwoHanded) 
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.CategoryId, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                <select asp-for="CategoryId" class="form-control" asp-items="ViewBag.CategoryId"></select>
                @*@Html.DropDownListFor(m => m.CategoryId, new SelectList(Model.Categories, "Id", "Name"), "", new { @class="form-control"})*@
                @Html.ValidationMessageFor(m => m.CategoryId)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.ClassId, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                <select asp-for="ClassId" class="form-control" asp-items="ViewBag.ClassId"></select>
                @Html.ValidationMessageFor(m => m.CategoryId)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Range, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Range, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Range)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Damage, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Damage, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Damage)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Pen, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Pen, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Pen)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Special, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Special, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Special)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Weight, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Weight, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Weight)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Cost, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Cost, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Cost)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.AvailabilityId, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                <select asp-for="AvailabilityId" class="form-control" asp-items="ViewBag.AvailabilityId"></select>
                @Html.ValidationMessageFor(m => m.AvailabilityId)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Source, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Source, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Source)
            </div>
        </div>
        
        <div class="form-group">
                @Html.LabelFor(m => m.Notes, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Notes, 5, 40, new {@class = "form-control"})
                @Html.ValidationMessageFor(model => model.Notes)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default"/>
            </div>
        </div>
    </div>
</form>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}